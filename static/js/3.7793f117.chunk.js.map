{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","consts/AnswerConst.tsx","components/Answer/Answer.tsx","components/Question/Question.tsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","pages/TriviaPage/Functions.ts","components/Timer/Timer.tsx","consts/TimerConsts.tsx","components/GameFinishedMessage.tsx/GameFinishedMessage.tsx","pages/TriviaPage/TriviaPage.tsx","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/regenerator-runtime/runtime.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","defineProperty","getOwnPropertyDescriptors","defineProperties","answerStatusColors","Answer","text","index","isDisabled","handleClick","color","style","useState","isAnimationShown","setIsAnimationShown","useEffect","setTimeout","Button","onClick","disabled","className","borderColor","marginBottom","backgroundColor","fontSize","fontWeight","width","Question","Typography","textAlign","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","value","error","done","Promise","then","getAnswersAfterSelection","answers","answerIndex","map","answer","getAnswersWithTheRightAnswer","isRight","fetchQuestions","fn","a","fetch","response","json","data","results","questionFromApi","incorrect_answers","answerText","splice","Math","floor","random","correct_answer","question","self","this","args","err","undefined","chooseQuestion","questions","removedQuestionText","updatedQuestions","Timer","isActive","showAnswer","time","setTime","timeLeft","GameFinisedMessage","message","Grid","item","TriviaPage","points","setPoints","isTimerActive","setIsTimerActive","setQuestions","isGameFinished","setIsGameFinished","setQuestion","setNextQuestion","questionText","prevState","questionAfterFiler","nextQuestion","showRightAnswer","xs","Title","container","direction","justify","alignItems","spacing","selectedAnswer","module","exports","runtime","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","obj","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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","file":"static/js/3.7793f117.chunk.js","sourcesContent":["import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export const answerStatusColors = {\r\n    RIGHT: 'green',\r\n    WRONG: 'red',\r\n    PENDING: 'orange',\r\n    BASE_COLOR: '#FF338D',\r\n}","import { Button } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport './answer.css';\r\n\r\ninterface AnswerProps {\r\n    text: string;\r\n    index: number;\r\n    isDisabled: boolean;\r\n    handleClick: () => void\r\n    color:string\r\n}\r\n\r\nexport const Answer = ({ text,index,isDisabled,handleClick,color}: AnswerProps) =>{\r\n const  style = 'slide-' + (index % 2 === 0 ? 'left' : 'right');\r\n const [isAnimationShown,setIsAnimationShown] = useState<boolean>(false);\r\n    useEffect(()=>{\r\n       setIsAnimationShown(true);\r\n       setTimeout(()=>{\r\n           setIsAnimationShown(false);\r\n       },2000)\r\n    },[text]);\r\n\r\n    return <Button\r\n        onClick={handleClick}\r\n        disabled={isDisabled}\r\n        className={isAnimationShown ? style : ''}\r\n        style={\r\n            {\r\n                borderColor: 'black',\r\n                marginBottom: '1vh',\r\n                color: 'pink',\r\n                backgroundColor:color,\r\n                fontSize: '5vh',\r\n                fontWeight: 'bold',\r\n                width: '30vw'\r\n            }}>{text}</Button> \r\n        }","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\n\r\ninterface QuestionsProp {\r\n    text: string;\r\n}\r\n\r\nexport const Question = ({ text }: QuestionsProp) =>\r\n    <Typography style={{ textAlign:'center', fontSize: '6vh', color: 'purple' }}>\r\n        {text}\r\n    </Typography>;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { answerStatusColors } from \"../../consts/AnswerConst\";\r\n\r\nexport const getAnswersAfterSelection = (answers: Answer[], answerIndex: number) =>\r\n    answers.map((answer, index) => {\r\n        if (index === answerIndex) {\r\n            answer.color = answerStatusColors.PENDING;\r\n        }\r\n        answer.isDisabled = true;\r\n        return answer;\r\n    });\r\n\r\nexport const getAnswersWithTheRightAnswer = (answers: Answer[]) =>\r\n    answers.map((answer) => {\r\n        if (answer.isRight) {\r\n            answer.color = answerStatusColors.RIGHT;\r\n        }\r\n        return answer;\r\n    });\r\n\r\nlet questions: Question[] = [];\r\n\r\nexport const adjustQuestionFromApiObjectToQuestionObject = (questionsFromApi: QuestionFromApi[]) =>\r\n    questionsFromApi.map((questionFromApi: QuestionFromApi) => {\r\n        let answers = questionFromApi.incorrect_answers.map((answerText: string) => {\r\n            return {\r\n                text: answerText,\r\n                isRight: false,\r\n                isDisabled: false,\r\n                color: answerStatusColors.BASE_COLOR,\r\n            }\r\n        });\r\n        answers.splice(Math.floor(Math.random() * answers.length),\r\n            0,\r\n            {\r\n                text: questionFromApi.correct_answer,\r\n                isRight: true,\r\n                isDisabled: false,\r\n                color: answerStatusColors.BASE_COLOR,\r\n            }\r\n        );\r\n        return {\r\n            text: questionFromApi.question,\r\n            answers: answers,\r\n        }\r\n    });\r\n\r\nexport const fetchQuestions = async () => {\r\n    const response = await fetch('https://opentdb.com/api.php?amount=10')\r\n    const data = await response.json();\r\n    const results: QuestionFromApi[] = await data.results;\r\n    return adjustQuestionFromApiObjectToQuestionObject(results);\r\n}\r\n\r\nexport const chooseQuestion = (questions:Question[],removedQuestionText = '') => {\r\n    const updatedQuestions = questions.filter((question)=>question.text !== removedQuestionText);\r\n    return updatedQuestions[Math.floor(Math.random() * updatedQuestions.length)];\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\"\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { TIME_TO_ANSWER_IN_SECONDS } from \"../../consts/TimerConsts\";\r\n\r\ninterface TimerProps {\r\n    isActive: boolean;\r\n    showAnswer: () => void;\r\n}\r\n\r\n\r\nexport const Timer = ({ isActive, showAnswer }: TimerProps) => {\r\n    const [time, setTime] = useState<number>(TIME_TO_ANSWER_IN_SECONDS);\r\n\r\n    useEffect(() => {\r\n        const timeLeft = time - 1;\r\n        if (isActive) {\r\n            if (timeLeft) {\r\n                setTimeout(() => {\r\n                    setTime(timeLeft);\r\n                }, 1000);\r\n            } else {\r\n                setTime(TIME_TO_ANSWER_IN_SECONDS);\r\n                showAnswer();\r\n            }\r\n        } else {\r\n            setTime(TIME_TO_ANSWER_IN_SECONDS);\r\n        }\r\n    });\r\n\r\n\r\n    return isActive ? <Typography\r\n        style={{\r\n            textAlign: 'center',\r\n            fontSize: '6vh',\r\n            color: 'purple'\r\n        }} >\r\n        {time}\r\n    </Typography> : null;\r\n}","export const TIME_TO_ANSWER_IN_SECONDS = 20;","import React from \"react\";\r\nimport { Typography, Grid } from \"@material-ui/core\";\r\n\r\ninterface GameFinisedMessageProps {\r\n    message: string;\r\n}\r\n\r\nconst GameFinisedMessage = ({ message }: GameFinisedMessageProps) => \r\n    <Grid item>\r\n        <Typography style={{ textAlign: 'center', fontSize: '6vh', color: 'purple' }}>\r\n            {message}\r\n        </Typography>\r\n    </Grid>\r\n\r\nexport default GameFinisedMessage;","import React, { useState, useEffect, } from 'react';\r\nimport { answerStatusColors } from '../../consts/AnswerConst';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Answer } from '../../components/Answer/Answer';\r\nimport { Question } from '../../components/Question/Question';\r\nimport { getAnswersAfterSelection, getAnswersWithTheRightAnswer, fetchQuestions, chooseQuestion } from './Functions';\r\nimport { Timer } from '../../components/Timer/Timer';\r\nimport { TIME_TO_ANSWER_IN_SECONDS } from '../../consts/TimerConsts';\r\nimport { Title } from '../../components/Title/Title';\r\nimport GameFinisedMessage from '../../components/GameFinishedMessage.tsx/GameFinishedMessage';\r\n\r\n\r\nconst TriviaPage = () => {\r\n    const [points, setPoints] = useState<number>(0);\r\n    const [isTimerActive, setIsTimerActive] = useState<boolean>(true);\r\n    const [questions, setQuestions] = useState<Question[]>([]);\r\n    const [isGameFinished, setIsGameFinished] = useState<boolean>(false);\r\n    \r\n    const [question, setQuestion] = useState<Question>(chooseQuestion(questions));\r\n\r\n    useEffect(() => {\r\n        fetchQuestions().then(\r\n            (questions: Question[]) => {\r\n                setQuestions(questions);\r\n                setQuestion(chooseQuestion(questions));\r\n            }\r\n        );\r\n        return () => {  };\r\n    }, []);\r\n\r\n    const removeQuestion = (questionText: string) => {\r\n        setQuestions((prevState) => {\r\n            const questionAfterFiler = prevState.filter((question) => question.text !== questionText);\r\n            setIsGameFinished(questionAfterFiler.length === 0);\r\n            return questionAfterFiler;\r\n        });\r\n    }\r\n\r\n    const setNextQuestion = () => {\r\n        removeQuestion(question.text);\r\n        setTimeout(() => {\r\n           const nextQuestion = chooseQuestion(questions,question.text);\r\n            setQuestion(nextQuestion);\r\n            setIsTimerActive(true);\r\n        }, 2000);\r\n    }\r\n\r\n    const showRightAnswer = (answers: Answer[]) => setQuestion(\r\n        {\r\n            ...question,\r\n            answers: getAnswersWithTheRightAnswer(answers)\r\n        });\r\n\r\n    const onTimesUp = () => {\r\n        setIsTimerActive(false);\r\n        showRightAnswer(question.answers);\r\n        setNextQuestion();\r\n    }\r\n\r\n    const checkAnswer = (answerIndex: number) => {\r\n        setIsTimerActive(false);\r\n        setQuestion({ ...question, answers: getAnswersAfterSelection(question.answers, answerIndex) });\r\n        setTimeout(() => {\r\n            let selectedAnswer = question.answers[answerIndex];\r\n            let answers = question.answers;\r\n            if (!selectedAnswer.isRight) {\r\n                selectedAnswer.color = answerStatusColors.WRONG;\r\n                answers[answerIndex] = selectedAnswer;\r\n            } else {\r\n                setPoints(points + 10);\r\n            }\r\n            showRightAnswer(answers);\r\n        }, 1000);\r\n        setTimeout(() => {\r\n            setNextQuestion();\r\n        }, 2000);\r\n\r\n    }\r\n\r\n    return (question) ? <>\r\n        <Grid item xs={3}>\r\n            {<Timer\r\n                isActive={isTimerActive}\r\n                showAnswer={onTimesUp}\r\n            />}\r\n        </Grid>\r\n        <Grid xs={6}>\r\n            <Title />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n            {!isGameFinished && <Grid container\r\n                direction='column'\r\n                justify='center'\r\n                alignItems='center'>\r\n                <Grid item>shimon</Grid>\r\n                <Grid item>{points} points</Grid>\r\n            </Grid>}\r\n        </Grid>\r\n        {!isGameFinished ? <> <Grid item>\r\n            <Question text={question.text} />\r\n        </Grid>\r\n            <Grid container\r\n                spacing={1}\r\n                direction='column'\r\n                justify='center'\r\n                alignItems='center'>\r\n                {question.answers.map((answer, index) => <Grid item>\r\n                    <Answer\r\n                        handleClick={() => checkAnswer(index)}\r\n                        color={answer.color}\r\n                        key={index}\r\n                        text={answer.text}\r\n                        index={index}\r\n                        isDisabled={answer.isDisabled} />\r\n                </Grid>)}\r\n            </Grid> </> : <GameFinisedMessage message={'GameOver your score is: ' + points} />}\r\n    </> : <div>yosssiiii</div>\r\n}\r\n\r\nexport default TriviaPage;","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n"],"sourceRoot":""}